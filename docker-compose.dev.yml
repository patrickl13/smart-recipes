version: '3'
services:
    app:
        container_name: django_dev
        build:
            context: ./backend
            dockerfile: Dockerfile.dev
        volumes:
            - ./backend/app:/app
            - media:/var/lib/docker/volumes/recipeapp_media/_data
            - static:/var/lib/docker/volumes/recipeapp_static/_data
        ports:
            - '8000:8000'
        command: >
            sh -c "python manage.py wait_for_db &&
                   python manage.py migrate &&
                   python manage.py runserver 0.0.0.0:8000"
        environment:
            - SECRET_KEY=${SECRET_KEY}
            - DEBUG=${DEBUG}
            - HOST=${DB_HOST}
            - NAME=${DB_NAME}
            - DB_USERNAME=${DB_USER}
            - PASSWORD=${DB_PASS}
            - AWS_ACCESS_KEY_ID=${DEV_AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${DEV_AWS_SECRET_ACCESS_KEY}
            - AWS_BUCKET_NAME=${DEV_AWS_BUCKET_NAME}
        depends_on:
            - db
            - localstack
    db:
        container_name: postgres_dev
        ports:
            - '5432:5432'
        image: postgres:10-alpine
        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASS}
        volumes:
            - postgres-data:/var/lib/postgresql/data
    localstack:
        image: localstack/localstack:latest
        container_name: localstack_s3
        ports:
        - '4563-4599:4563-4599'
        - '8055:8080'
        environment:
        - SERVICES=s3
        - DEBUG=1
        - DATA_DIR=/tmp/localstack/data
        - AWS_ACCESS_KEY_ID=${DEV_AWS_ACCESS_KEY_ID}
        - AWS_SECRET_ACCESS_KEY=${DEV_AWS_SECRET_ACCESS_KEY}
        - AWS_BUCKET_NAME=${DEV_AWS_BUCKET_NAME}
        - DEFAULT_REGION=us-east-1
        volumes:
        - './.localstack:/tmp/localstack'
        - '/var/run/docker.sock:/var/run/docker.sock'
volumes:
    media: 
    static: 
    postgres-data:
    localstack:
        